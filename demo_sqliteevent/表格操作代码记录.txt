表格名称

Table

试验记录主表 TesTb
事件状态记录表 EvenTb
参数文件记录表 ParamFileTb
非正常事件记录 FailTesTb

================================
试验记录主表 TesTb 字段 6个
_id Integer PRIMARY KEY AUTOINCREMENT NOT NULL
time_stamp  INTEGER NOT NULL //时间戳
md5 TEXT
s_event_id INTEGER //开始事件id
e_event_id INTEGER //结束事件id
gain INTEGER NOT NULL //增益
hardcode INTEGER NOT NULL //控制器硬件号

conDB.Execute "Create Table TesTb (_id Integer PRIMARY KEY AUTOINCREMENT NOT NULL, time_stamp INTEGER NOT NULL,md5 TEXT, s_event_id INTEGER,e_event_id INTEGER,gain INTEGER NOT NULL,hardcode INTEGER NOT NULL)"



---------------------
插入数据

Cmd As cCommand

Set Cmd=conDB.CreateCommand("Insert Into TesTb(_id,time_stamp,md5,s_event_id,e_event_id,gain,hardcode) Values(?,?,?,?,?,?)")
If Err Then MsgBox Err.Description: Err.Clear: Exit Sub
conDB.Synchronous = False
conDB.BeginTrans

Cmd.SetNull 1   '_id
Cmd.SetInt32 2,   'time_stamp
Cmd.SetText 3,
Cmd.SetInt32 4,   's_event_id
Cmd.SetInt32 5,   'e_event_id
Cmd.SetInt32 6,   'gain
Cmd.SetInt32 7,   'hardcode

Cmd.Execute
Cnn.CommitTrans
Cnn.Synchronous = True

----------------------------
结构体

Public Type Testdata_db

time_stamp As Long
md5 As String
gain As Byte
hardcode As Integer
End Type




================================
事件状态记录表 EvenTb 字段 15个

_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL
test_id INTEGER //试验序列号
time_stamp INTEGER NOT NULL //时间戳
event_name TEXT //事件名称
field_volt REAL //励磁电压
field_curr REAL //励磁电流
centring INTEGER //对中
wind_pressure REAL //风压
control_value REAL //控制器输出
driving_volt REAL //驱动电压
armature_volt REAL //动圈电压
armature_curr REAL //动圈电压
sine_freq INTEGER //正弦频率
shock_num INTEGER //冲击次数
random_value INTEGER //随机值


conDB.Execute "Create Table EvenTb ( _id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ,test_id INTEGER ,time_stamp INTEGER NOT NULL,event_name TEXT ,field_volt REAL ,field_curr REAL ,centring INTEGER ,wind_pressure REAL ,control_value REAL ,driving_volt REAL ,armature_volt REAL ,armature_curr REAL, sine_freq INTEGER ,shock_num INTEGER ,random_value INTEGER)"

---------------------
插入数据
Cmd As cCommand

Set Cmd=conDB.CreateCommand("Insert Into EvenTb(_id,test_id,time_stamp,event_name,field_volt,field_curr,centring,wind_pressure,control_value,driving_volt,armature_volt,armature_curr,sine_freq,shock_num,random_value) Values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)")
If Err Then MsgBox Err.Description: Err.Clear: Exit Sub
conDB.Synchronous = False
conDB.BeginTrans
Cmd.SetNull 1   '_id
Cmd.SetInt32 2,   'test_id
Cmd.SetInt32 3   'time_stamp
Cmd.SetText 4,   'event_name
Cmd.SetDouble 5,   'field_volt
Cmd.SetDouble 6,   'field_curr
Cmd.SetInt32 7,   'centring
Cmd.SetDouble 8,   'wind_pressure
Cmd.SetDouble 9,   'control_value
Cmd.SetDouble 10,   'driving_volt
Cmd.SetDouble 11,   'armature_volt
Cmd.SetDouble 12,   'armature_curr
Cmd.SetInt32 13,   'sine_freq
Cmd.SetInt32 14,   'shock_num
Cmd.SetInt32 15,   'random_value
Cmd.Execute
Cnn.CommitTrans
Cnn.Synchronous = True


----------------
结构体

Public Type Eventdata_db

test_id As Long
time_stamp As Long
event_name As String
field_volt As Single
field_curr As Single
centring As Integer
wind_pressure As Single
control_value As Single
driving_volt As Single
armature_volt As Single
armature_curr As Single
sine_freq As Integer
shock_num As Integer
random_time As Integer

End Type



================================
参数文件记录表 ParamFileTb 字段 8个

_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL
md5 TEXT 
file BLOB //文件
max_acce REAL //最大加速度
max_velo REAL //最大速度
max_disp REAL //最大位移
file_path TEXT //测试用 文件名称
test_type TEXT //实验类型

conDB.Execute "Create Table ParamFileTb (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,md5 TEXT ,file BLOB,max_acce REAL ,max_velo REAL ,max_disp REAL,file_path TEXT,test_type TEXT)"
---------------------
插入数据


Cmd As cCommand

Set Cmd=conDB.CreateCommand("Insert Into ParamFileTb(_id,md5,file,max_acce,max_velo,max_disp,file_path,test_type) Values(?,?,?,?,?,?,?,?)")
If Err Then MsgBox Err.Description: Err.Clear: Exit Sub
conDB.Synchronous = False
conDB.BeginTrans

Cmd.SetNull 1   '_id
Cmd.SetText 2,   'md5
Cmd.SetBlob 3,New_c.FSO.ReadByteContent(PhotosFolder & PicFName   'file
Cmd.SetDouble 4,   'max_acce
Cmd.SetDouble 5,   'max_velo
Cmd.SetDouble 6,   'max_disp
Cmd.SetText 7, Right$(filepath, 5)
Cmd.SetText 8,
Cmd.Execute
Cnn.CommitTrans
Cnn.Synchronous = True

----------------------
查询MD5值在不在
md5code As String 先获取MD5值 变量为 md5code
Dim RsParameters As cRecordset 接受数据集

Set RsParameters = conDB.OpenRecordset("Select * from ParameterFiletable Where md5='" & md5code & "'")


-------------------------
获取所有数据
Set RsParameters = conDB.OpenRecordset("Select * From ParameterFiletable")

--------------------------
Public Type Paramdata_db

max_acce As Single
max_velo As Single
max_disp As Single
file_path As String
test_type As String

End Type


================================
非正常事件记录 FailTesTb 字段 6个
_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL
test_id INTEGER //试验序列号
reason TEXT //停机原因
linkage TEXT //连锁状态
profile BLOB //参考谱
drive BLOB //驱动谱


conDB.Execute "Create Table FailTesTb (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , test_id INTEGER , reason TEXT ,linkage TEXT ,profile BLOB ,drive BLOB)"

---------------------
插入数据

Cmd As cCommand

Set Cmd=conDB.CreateCommand("Insert Into FailTesTb(id,test_id,reason,linkage,profile,drive) Values(?,?,?,?,?,?)")
If Err Then MsgBox Err.Description: Err.Clear: Exit Sub
conDB.Synchronous = False
conDB.BeginTrans

Cmd.SetNull 1   '_id
Cmd.SetInt32 2,   'test_id
Cmd.SetText 3,   'reason
Cmd.SetText 4,   'linkage
Cmd.SetBlob 5,   'profile
Cmd.SetBlob 6,   'drive

Cmd.Execute
conDB.CommitTrans
conDB.Synchronous = True
-------------------
Public Type Faildata_db

test_id As Long
reason As String
linkage As String
profile() As Byte
drive() As Byte

End Type



===============================
设备基本配置表 25个字段

Public Type EquipConfig_db

table_no As Byte '台体编号
table_model As String '设备型号
table_date As Date '出厂日期
serial_no As String '设备序列号
max_sine_thrust As Single '最大正弦推力
max_random_thrust As Single '最大随机推力
max_shock_thrust As Single '最大冲击推力
max_acc As Single '最大加速度
max_conti_disp As Single '连续位移
max_transi_disp As Single '瞬态位移
max_load_bear As Single '最大承载
compon_quality As Single '组件总质量
hori_slid_table As Byte '水平滑台数量
verti_expan As Byte '垂直扩展台数量
hori_slid_model As String '水平滑台型号
hori_bearing_amount As Byte '水平滑台轴承数量
hori_slid_quality As Single '水平滑台总质量
verti_expan_model As String '垂直扩展台型号
auxi_support As Byte '辅助支撑数量
auxi_guide As Byte '辅助导向数量
verti_expan_quality As Single '扩展台质量
anti_resonance_freq As Single '一阶反共振频率
blower_model As String '风机型号
blower_Manufactor As String '风机厂家
blower_date As Date '风机出厂日期

End Type



================================
模块中需要实现的函数

1向参数记录表添加数据
public  int insertDataParamFileTb(ParamData_db data)
参数 ParamData_db 参数记录结构体
返回值 插入行的id值 添加失败返回-1

--------
2向试验记录表添加数据
public int insertDataTesTb(TestData_db data)
参数 TestData_db 试验数据结构体
返回值 插入行的id值 添加失败返回-1

--------

3向事件记录表添加数据
public int insertDataEvenTb(EventData_db data)
参数 EventData_db 事件数据结构体
返回值 插入行的id值 添加失败返回-1
--------

4向非正常记录表添加数据
public int insertDataFailTesTb(FailData_db data)
参数 FailTesData_db 失败数据结构体
返回值 插入行的id值 添加失败返回-1

--------
5获取文件MD5码
public String getMd5FromFile(String filepath)
参数 字符串 文件完整路径
返回值 字符串 MD5字符串 失败 为空

--------
6 向试验记录表中更新事件ID信息

public byte UpdateEventIDToTestdb(Long id , String fiele)
参数  LONG 更新ID  字符串 字段名
返回值 byte 更新数量 更新失败 -1


--------
7获取参数记录表所有信息

public cRecordset getDataParamFileTb(String sql)
参数 字符串 查询内容 如果参数为空 则返回全部信息
返回值 数据Recordset 可以用于DG控件
--------
8获取试验记录表所有信息

public cRecordset getDataTesTb(String sql)
参数 字符串 查询内容 如果参数为空 则返回全部信息
返回值 数据Recordset 可以用于DG控件
--------
9获取事件记录表所有信息
public cRecordset getEvenTb(String sql)
参数 字符串 查询内容 如果参数为空 则返回全部信息
返回值 数据Recordset 可以用于DG控件
--------
10获取失败试验记录表所有信息
public cRecordset getFailTesTb(String sql)
参数 字符串 查询内容 如果参数为空 则返回全部信息
返回值 数据Recordset 可以用于DG控件


--------
11 删除试验记录表信息

public Integer delDataFailTesTb(String sql)
参数 String sql
返回值 Integer 删除掉的数据量

--------
12 删除事件记录表信息
public Integer delDataEvenTb(String sql)
参数 String sql
返回值 Integer 删除掉的数据量

--------
13 删除失败试验记录表信息
public Integer delDataFailTesTb(String sql)
参数 String sql
返回值 Integer 删除掉的数据量

--------
14 清理数据库 删除掉试验表 事件表 失败表 半年前的数据信息
public Integer cleanDatadb(Long time_stamp)
参数 long 截止日期时间戳 在此时间戳之前的信息被清除掉

--------
15 数据打包 数据打包出需要的内容 生成一个数据包
可能需要新建一个小数据库文件 将一些内容复制进去

public  packageDb()


--------
16 向设备参数表添加数据
public int insertEquipConTb(Equipconfig_db data)
参数 Equipconfig_db试验数据结构体
返回值 插入行的id值 添加失败返回-1
--------
17 查询参数表中是否包含MD5码
public byte queryMD5InParamFileTb(String md5)
参数 string MD5字符串
返回值 int 获取数量 1 存在 -1 不存在


18 封装方法 开始试验记录信息
按照开始试验记录流程 依次向参数表 试验表 和事件表中 添加对应数据


参数 
ParamData_db data
TestData_db data
EventData_db data


19封装方法 添加结束类试验信息
依次向 事件表 试验表中记录对应信息值
参数 
Long id
EventData_db data


20封装方法 添加失败类试验信息
依次向 事件表 失败表 试验表 中添加对应数据
Long id
EventData_db data
FailData_db data




================================
数据库其他附加功能

----------------------------
获取刚添加到数据库中 自增ID的值

注意 id值为自增 可能必须要求id值为Integer

最优方案

添加完数据 直接用

lastid=conDB.LastInsertAutoID
 conDB为数据库的连接 conDB As cConnection

注意 直接通过数据库连接获取最后插入值
 
第二方案

用sql命令查询数据集
RsTests2 As cRecordset
Set RsTests2 = conDB.OpenRecordset("select last_insert_rowid() from Testable")
lastid = RsTests2.Fields("last_insert_rowid()").value





================================



================================
试验类型
sine fixsin ran rstd shock srs rnr rns




===========================================






注意点

添加数据 如果字段是自增 数据要传NULL
insert into t_1(id,name)values(NULL,'赵玉开5');

自增长字段定义为INTEGER PRIMARY KEY AUTOINCREMENT,即可由引擎自动设定其值，引擎会设定为最大的rowid+1。如果表為空，那麼將會插入1。





测试Demo  项目

数据库名称 
testdemodatabase


公共量

RsParameters 参数表全记录集
RsTests 实验表全记录集
RsTests2 实验表最后一条数据记录集
Cmd 命令对象

conDB 主数据库连接


数据库的关闭

控件数据集 需要关闭
Set DG.DataSource = Nothing

数据集 需要关闭
Rs.Close
数据库连接
Set Cnn = Nothing



控件名称
------------------------
按钮
ck_flag  总记录 Flag 勾选 记录 不勾选  不记录数据库

btn_start 试验开始时间

btn_init 数据库初始化
btn_yufinisd 预实验完成
btn_ji 晋级
btn_pause 暂停
btn_intrrpt 试验中断
btn_finish 完成
btn_fail 失败

--------------------
表显示
dg_cs 参数记录表
dg_syjlzb 试验记录主表
dg_sjjlb 事件记录表
dg_abnormal 非正常记录表


注意 Set Datagrid.DataSource = Recordset.DataSource
是传递引用到控件数据源,传递地址
因此传递数据源后,重新更新数据源之后 控件数据源将为空
所以 只能一个Datagrid控件对应一个数据源

-------------------------
耗时显示

lb_time_cs 参数记录表添加数据 耗时
lb_times_init 数据库初始化 耗时
lb_time_event 事件记录表 添加数据 耗时
lb_time_abnormal 非正常表 添加数据 耗时
lb_time_test 试验记录表 添加数据耗时

----------------------------
关键公共变量
md5code As String '公共数据md5码
testMastcode As Long '试验记录表ID 缓存试验表中最后添加的ID
eventcode As Long '事件记录表ID 缓存 事件表中最后添加的ID 用于 更新试验记录表

filepath As String 公共的文件路径 从模块初始化获取的

eventName As String '事件名称  公共设置 用于多个 事件按钮 添加事件内容用
eventType As Integer '事件类型  '枚举 0 开始型  1 过程型  2结束型  -1失败型


数据集

RsParameters As cRecordset  参数记录表 记录集
RsTests As cRecordset 试验记录表 记录集
RsTestsEnd As cRecordset 试验记录表 最后一条记录搜索集 用于 更新试验记录数据中的相关字段信息
RsEvent As cRecordset 事件记录表 记录集
Rsabnormal As cRecordset 不正常结束试验表 记录集

命令对象

Cmd As cCommand 用于生成sql命令


-------------------------------

testState    As Integer  '按钮互锁状态的Flag
'按钮互锁状态 两种互锁状态
'第一种  试验没开始  开始试验 真  自检完成 假  过程 假  结束 假  testState 0
'第二种  自检开始  开始试验 假 自检完成 真 过程假 结束假  testState 1
'第三种  试验开始  开始试验假 自检 假  过程真 结束真  testState 2

界面类别按钮的互锁关系

对应三种按钮类别 开始事件按钮(试验开始)  过程事件按钮(自检结束,进退级,试验继续暂停)   结束事件按钮(中断,结束 ,失败)
初始化  :开始 真, 过程 结束 假
按开始按钮后: 开始假  过程 和结束 真
按过程按钮后: 开始假 过程和结束 真  同上
按结束按钮后: 开始真 过程和结束假  同初始化

总计 两种互锁状态
一种状态是  开始 真  过程 结束 假
第二种是 开始假 过程和结束 真

--------------------------------
添加事件策略

如果为开始事件
添加记录后 需要获取最后记录id号
更新试验记录表 中的 开始事件记录号


如果为过程事件
不需要进行其他操作


如果为结束事件

添加记录后 需要获取最后记录id号
更新试验记录表 中的 结束事件记录号


如果为失败事件
添加记录后 需要获取最后记录id号
更新试验记录表 中的 结束事件记录号

添加失败记录表内容
------------------------------



功能函数
EnsureDBConnection() 连接数据库

randomInt 获取随机整数  参数为最大值 包括最大值

randomSingle 获取随机浮点数  参数为最大值 包括最大值

NowTimestamp() 获取当前时间戳 返回值long

GetFilePath() 获取随机文件路径

GetTestName() 获取随机试验名称

GetFailName() 获取随机失败名称


==================================



















Public tmpDataGrid As DataGrid'Use and determine how many rows of data are available for rolling DataGrid control
Public tmpDataGrid RowNum As Integer
Public Rec2 As New Recordset 

Public Const GWL_WNDPROC = -4 
Public Const WM_COMMAND = &H111
Public Const WM_MBUTTONDOWN= &H207
Public Const WM_MBUTTONUP= &H208
Public Const WM_MOUSEWHEEL= &H20A

Public Oldwinproc As Long


Public Declare Function SetWindows Long Lib "User32" Alias "SetWindowsLongA" (ByVal hWnd As Long,ByVal nIndex As Long, ByVal dwNewLong As long) As Long 





Public Declare Function CallWindowProc Lib "user32" Alias "CallWindowProcA" (ByVal lpPrevWndFunc As Long, ByVal hWnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long 
Public Declare Function GetWindows Long Lib User32 Alias GetWindows Long A(ByVal hWnd As Long,ByVal nIndex As Long)As Long 
Public Function DataGridScroll(ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long  '该函数用于实现鼠标滚动           Select Case wMsg 
 Case WM MOUSEWHEEL
                  Case -7864320       '向下滚                        If tmpDataGrid.Row < tmpDataGridRowNum - tmpDataGrid.FirstRow Then 
                         tmpDataGrid.Row = tmpDataGrid.Row + 1                        End If                        
 Case8194
 If tmpDataGrid.Bookmark81
                         tmpDataGrid.Bookmark = tmpDataGrid.Bookmark - 1                       End If                               End Select
                                                End Select 
 DataGridScroll=CallWindows Proc (Oldwinproc,hWnd,wMsg,wParam,Paralm)End Function